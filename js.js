// результат буде'number33' бо 'number' це стрінг, js бачить, що це стрінг і тому просто конкатенує все разом.
'number' + 3 + 3;

// результат буде 3, бо null це 0, 0+3=3
null + 3;

// результат буде "qwerty", бо "qwerty" це true, тому знаодить перше true і виводить його
5 && "qwerty";

// результат буде '42hillel', бо + перетворює стрінг в тип номер, далі зліва направо: додаються два числа 40+2 = 42 + "hillel" = 42hillel
+'40' + +'2' + "hillel";

// результат буде false бо стрінга "10" перетворюється в номер, далі 10-5=5, а 5!==6
'10' - 5 === 6;

// результат буде 1, бо 1+0=1
true + false;

// буде NaN бо "4px" це стрінга, яка стає NaN при перетворенні
'4px' - 3;

// буде 1 бо стрінга 4 перетворюється в номер, далі 4-3=1 
'4' - 3;

// буде "61" бо спочатку виконуэться множення, у оператора множення вищий пріоритет, 3 в степені 0 = 1, далі відбувається конкатенація, бо 6 це стрінга
'6' + 3 ** 0;

// буде 2, бо стрінга 6 перетворюється в номер, і далі просто 12/6=2
12 / '6';

// буде '10false' бо спочатку виконується дія в дужках, 5!==6, тому fslse, далі стрінга "10"+ false = "10false"
'10' + (5 === 6);

// буде false бо null та стрінга це різні типи данних
null == '';

// буде 27 бо спочатку виконуються дії в дужках, 9/3=3, далі 3 підносимо в 3 степень і маємо 27
3 ** (9 / 3);

// буде true, бо це абсолютно однакові записи перед і після оператора порівняння, в цьому випадку false та true мають тип стрінг
!!'false' == !!'true';

// результат буде 1, бо спочатку виконується дії з &&, там обидва true, отже виведе останнє значення. далі АБО шукає перше true і знаходить 1 
0 || '0' && 1;

// буде false бо + перетворює null в тип намбер і стає 0. Далі 0 порівнюємо з false, 0==0, маємо true, далі порівнюємо true з 1, тобто 1 порівнюємо з 1 і маємо false
(+null == false) < 1;

// результат буде true, бо спочатку && знайде false, але потім оператор АБО знайде true
false && true || true;

// результат буде false, бо спочатку виконаються дії в дужках, в них буде true, а далі && знайде перше хибне значення false
false && (false || true);

// буде false бо + перетворює null в тип намбер і стає 0. Далі 0 порівнюємо з false, 0==0, маємо true. Далі порівнюємо true з 1 в 5 ступені, тобто порівнюємо  1 з 1 , вони рівні, отже false
(+null == false) < 1 ** 5;